To install dcicpp:

Download everything here in the same place. We used the folder Libraries in the home folder. You can add a variable in your bashrc to this place or add the library path manually.

- base_matrices

- CHOLMOD (e outras do Tim Davis) AMD
http://www.cise.ufl.edu/research/sparse/cholmod/current/CHOLMOD.tar.gz
http://www.cise.ufl.edu/research/sparse/amd/current/AMD.tar.gz
http://www.cise.ufl.edu/research/sparse/camd/current/CAMD.tar.gz
http://www.cise.ufl.edu/research/sparse/colamd/current/colamd.tar.gz
http://www.cise.ufl.edu/research/sparse/ccolamd/current/ccolamd.tar.gz
http://www.cise.ufl.edu/research/sparse/UFconfig/current/UFconfig.tar.gz

- Metis
http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/metis-5.0.2.tar.gz

- Goto BLAS
http://cms.tacc.utexas.edu/fileadmin/images/GotoBLAS2-1.13_bsd.tar.gz

Uncompres everything. Install everything in 32 bits.
INSTALL Goto BLAS First:

$ make BINARY=32

if needed use TARGET option too. We needed to set to CORE2, because our processor is not supported.

$ make BINARY=32 TARGET=CORE2

INSTALL Metis:

$ make config
$ make
# make install

INSTALL CHOLMOD and dependencies

Edit UFconfig/UFconfig:
- Add -m32 to CFLAGS and F77FLAGS

- Comment lines
    BLAS = -lblas -lgfortran
    LAPACK = -llapack

- Add line
    BLAS = $(HOME)/Libraries/GotoBLAS2/libgoto2.a $(HOME)/Libraries/GotoBLAS2/libgoto2.so -lgfortran -lgfortranbegin

- Edit the variables METIS_PATH and METIS to reflect your configurations. In our case
    METIS_PATH = $(HOME)/Libraries/metis
    METIS = $(METIS_PATH)/libmetis.a

Go to each folder AMD, CAMD, COLAMD, CCOLAMD and CHOLMOD (this must be last) and do

$ make

- base_matrices

add the following lines, editing to reflect your configuration, to the file $HOME/.bashrc

export GOTOBLASDIR="$HOME/Libraries/GotoBLAS2"
export GOTOBLASLIBS="$GOTOBLASDIR/libgoto2.a $GOTOBLASDIR/libgoto2.so -lgfortran -lgfortranbegin"

LIBSDIR="$HOME/Libraries"
METISDIR="${LIBSDIR}/metis"
TIMDAVISDIR="${LIBSDIR}"
CHOLMODDIR="$TIMDAVISDIR/CHOLMOD"
AMDDIR="$TIMDAVISDIR/AMD"
CAMDDIR="$TIMDAVISDIR/CAMD"
COLAMDDIR="$TIMDAVISDIR/COLAMD"
CCOLAMDDIR="$TIMDAVISDIR/CCOLAMD"
UFCONFIGDIR="$TIMDAVISDIR/UFconfig"
BMDIR="$LIBSDIR/base_matrices"
DCICPPDIR="$LIBSDIR/dcicpp"

TIMDAVISLIB="$CHOLMODDIR/Lib:$AMDDIR/Lib:$CAMDDIR/Lib:$COLAMDDIR/Lib:$CCOLAMDDIR/Lib"
METISLIB="$METISDIR"
BMLIB="$BMDIR/Lib"
CUTERLIB="$MYCUTER/double/lib"
DCICPPLIB="$DCICPPDIR/Lib"

TIMDAVISI="$CHOLMODDIR/Include:$UFCONFIGDIR"
METISI="$METISDIR/Lib"
BMI="$BMDIR/Include"
CUTERI="$CUTER/common/include"
DCICPPI="$DCICPPDIR/Include"

export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$TIMDAVISLIB:$METISLIB:$BMLIB:$CUTERLIB:$GOTOBLASDIR:$DCICPPLIB"
export LIBRARY_PATH="$LD_LIBRARY_PATH:$TIMDAVISLIB:$METISLIB:$BMLIB:$CUTERLIB:$GOTOBLASDIR:$DCICPPLIB"
export LIBPATH="$LD_LIBRARY_PATH:$TIMDAVISLIB:$METISLIB:$BMLIB:$CUTERLIB:$GOTOBLASDIR:$DCICPPLIB"
export CPLUS_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:$TIMDAVISI:$METISI:$BMI:$CUTERI:$DCICPPI"
export C_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:$TIMDAVISI:$METISI:$BMI:$CUTERI:$DCICPPI"
export INCLUDE_PATH="$CPLUS_INCLUDE_PATH:$TIMDAVISI:$METISI:$BMI:$CUTERI:$DCICPPI"
Open a new terminal or use the command
$ source $HOME/.bashrc

If needed, edit make.inc and do

$ make all

- dcicpp

If needed, edit make.inc and do

$ make all

- CUTEr (for testing and comparing)

Download CUTEr using svn

$ svn co https://magi-trac-svn.mathappl.polymtl.ca/SVN/cuter/sifdef/branches/SifDec2 ./sifdec2
$ svn co https://magi-trac-svn.mathappl.polymtl.ca/SVN/cuter/cuter/branches/CUTEr2 ./cuter2

Download SIF problems

$ wget ftp://ftp.numerical.rl.ac.uk/pub/cuter/mastsif_small.tar.gz
$ wget ftp://ftp.numerical.rl.ac.uk/pub/cuter/mastsif_large.tar.gz

Uncompress the file

$ tar -zxf mastsif_small.tar.gz
$ tar -zxf mastsif_large.tar.gz

We need to add some lines to $HOME/.bashrc
We will use the following options with CUTEr, if you need to change them, then the lines could change too. 
  - PC
  - Linux
  - gfortran
  - gnu g++
  - double
  - large
 
In file $HOME/.bashrc, add

ROOTCUTER="$HOME/Libraries/CUTEr"

export CUTER="$ROOTCUTER/cuter2"
export MYCUTER="$CUTER/CUTEr.large.pc.lnx.gfo"
export SIFDEC="$ROOTCUTER/sifdec2"
export MYSIFDEC="$SIFDEC/SifDec.large.pc.lnx.gfo"
export MASTSIF="$ROOTCUTER/mastsif"
export MANPATH="$CUTER/common/man:$SIFDEC/common/man:$MANPATH"
export PATH="MYCUTER/bin:$MYSIFDEC/bin:$PATH"


Open a new terminal or use the command
$ source $HOME/.bashrc

Now, compile dcicpp for cuter. In the dcicpp folder, enter
$ make cuter

See TESTING.cuter to proceed with testing
